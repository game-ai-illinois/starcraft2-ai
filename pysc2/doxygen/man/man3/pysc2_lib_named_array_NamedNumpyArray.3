.TH "pysc2.lib.named_array.NamedNumpyArray" 3 "Fri Sep 28 2018" "UIUCscaipy2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
pysc2.lib.named_array.NamedNumpyArray
.SH SYNOPSIS
.br
.PP
.PP
Inherits ndarray\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "def \fB__new__\fP (cls, values, names, args, kwargs)"
.br
.ti -1c
.RI "def \fB__array_finalize__\fP (self, obj)"
.br
.ti -1c
.RI "def \fB__getattr__\fP (self, name)"
.br
.ti -1c
.RI "def \fB__setattr__\fP (self, name, value)"
.br
.ti -1c
.RI "def \fB__getitem__\fP (self, indices)"
.br
.ti -1c
.RI "def \fB__setitem__\fP (self, indices, value)"
.br
.ti -1c
.RI "def \fB__getslice__\fP (self, i, j)"
.br
.ti -1c
.RI "def \fB__setslice__\fP (self, i, j, seq)"
.br
.ti -1c
.RI "def \fB__repr__\fP (self)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.PP
.nf
A subclass of ndarray that lets you give names to indices.

This is a normal ndarray in the sense that you can always index by numbers and
slices, though elipses don't work. Also, all elements have the same type,
unlike a record array.

Names should be a list of names per dimension in the ndarray shape. The names
should be a list or tuple of strings, a namedtuple class (with names taken
from _fields), or an IntEnum. Alternatively if you don't want to give a name
to a particular dimension, use None. If your array only has one dimension, the
second level of list can be skipped.

Example usage:
  a = named_array.NamedNumpyArray([1, 3, 6], ["a", "b", "c"])
  a.a, a[1], a["c"] => 1, 3, 6
  b = named_array.NamedNumpyArray([[1, 3], [6, 8]], [["a", "b"], None])
  b.a, b[1], b["a", 1] => [1, 3], [6, 8], 3
  c = named_array.NamedNumpyArray([[1, 3], [6, 8]], [None, ["a", "b"]])
  c[0].a, b[1, 0], b[1, "b"] => 1, 6, 8
Look at the tests for more examples including using enums and named tuples.

.fi
.PP
 
.SH "Member Function Documentation"
.PP 
.SS "def pysc2\&.lib\&.named_array\&.NamedNumpyArray\&.__array_finalize__ ( self,  obj)"

.SS "def pysc2\&.lib\&.named_array\&.NamedNumpyArray\&.__getattr__ ( self,  name)"

.SS "def pysc2\&.lib\&.named_array\&.NamedNumpyArray\&.__getitem__ ( self,  indices)"

.PP
.nf
Get by indexing lookup.
.fi
.PP
 
.SS "def pysc2\&.lib\&.named_array\&.NamedNumpyArray\&.__getslice__ ( self,  i,  j)"

.SS "def pysc2\&.lib\&.named_array\&.NamedNumpyArray\&.__new__ ( cls,  values,  names,  args,  kwargs)"

.SS "def pysc2\&.lib\&.named_array\&.NamedNumpyArray\&.__repr__ ( self)"

.PP
.nf
A repr, parsing the original and adding the names param.
.fi
.PP
 
.SS "def pysc2\&.lib\&.named_array\&.NamedNumpyArray\&.__setattr__ ( self,  name,  value)"

.SS "def pysc2\&.lib\&.named_array\&.NamedNumpyArray\&.__setitem__ ( self,  indices,  value)"

.SS "def pysc2\&.lib\&.named_array\&.NamedNumpyArray\&.__setslice__ ( self,  i,  j,  seq)"


.SH "Author"
.PP 
Generated automatically by Doxygen for UIUCscaipy2 from the source code\&.
