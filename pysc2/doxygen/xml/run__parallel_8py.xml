<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="run__parallel_8py" kind="file" language="Python">
    <compoundname>run_parallel.py</compoundname>
    <innerclass refid="classpysc2_1_1lib_1_1run__parallel_1_1_run_parallel" prot="public">pysc2::lib::run_parallel::RunParallel</innerclass>
    <innernamespace refid="namespacepysc2_1_1lib_1_1run__parallel">pysc2::lib::run_parallel</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacepysc2_1_1lib_1_1run__parallel" refkind="compound"><highlight class="comment">#<sp/>Copyright<sp/>2017<sp/>Google<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS-IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;A<sp/>thread<sp/>pool<sp/>for<sp/>running<sp/>a<sp/>set<sp/>of<sp/>functions<sp/>synchronously<sp/>in<sp/>parallel.</highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral">This<sp/>is<sp/>mainly<sp/>intended<sp/>for<sp/>use<sp/>where<sp/>the<sp/>functions<sp/>have<sp/>a<sp/>barrier<sp/>and<sp/>none<sp/>will</highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral">return<sp/>until<sp/>all<sp/>have<sp/>been<sp/>called.</highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>absolute_import</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>division</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>print_function</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>functools</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>concurrent<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>futures</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="classpysc2_1_1lib_1_1run__parallel_1_1_run_parallel" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1run__parallel_1_1_run_parallel" kindref="compound">RunParallel</ref>(object):</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Run<sp/>all<sp/>funcs<sp/>in<sp/>parallel.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1run__parallel_1_1_run_parallel_1aa887a194de13532b110dfe92f0789b82" kindref="member">__init__</ref>(self,<sp/>timeout=None):</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1run__parallel_1_1_run_parallel_1a1728fd65b70f801a017d41666da61191" kindref="member">_timeout</ref><sp/>=<sp/>timeout</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1run__parallel_1_1_run_parallel_1a89ccc914a1c77fd67d9e016cbc82d07f" kindref="member">_executor</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1run__parallel_1_1_run_parallel_1a11c9fd84fd9f2f5f0605b2cf25120e54" kindref="member">_workers</ref><sp/>=<sp/>0</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1run__parallel_1_1_run_parallel_1a2f255ba938812c81a7ef748dc358d10e" kindref="member">run</ref>(self,<sp/>funcs):</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Run<sp/>a<sp/>set<sp/>of<sp/>functions<sp/>in<sp/>parallel,<sp/>returning<sp/>their<sp/>results.</highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Make<sp/>sure<sp/>any<sp/>function<sp/>you<sp/>pass<sp/>exits<sp/>with<sp/>a<sp/>reasonable<sp/>timeout.<sp/>If<sp/>it</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>doesn&apos;t<sp/>return<sp/>within<sp/>the<sp/>timeout<sp/>or<sp/>the<sp/>result<sp/>is<sp/>ignored<sp/>due<sp/>an<sp/>exception</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>in<sp/>a<sp/>separate<sp/>thread<sp/>it<sp/>will<sp/>continue<sp/>to<sp/>stick<sp/>around<sp/>until<sp/>it<sp/>finishes,</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>including<sp/>blocking<sp/>process<sp/>exit.</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>funcs:<sp/>An<sp/>iterable<sp/>of<sp/>functions<sp/>or<sp/>iterable<sp/>of<sp/>args<sp/>to<sp/>functools.partial.</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Returns:</highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>list<sp/>of<sp/>return<sp/>values<sp/>with<sp/>the<sp/>values<sp/>matching<sp/>the<sp/>order<sp/>in<sp/>funcs.</highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Raises:</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>Propagates<sp/>the<sp/>first<sp/>exception<sp/>encountered<sp/>in<sp/>one<sp/>of<sp/>the<sp/>functions.</highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>funcs<sp/>=<sp/>[f<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>callable(f)<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>functools.partial(*f)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>f<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>funcs]</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(funcs)<sp/>==<sp/>1:<sp/><sp/></highlight><highlight class="comment">#<sp/>Ignore<sp/>threads<sp/>if<sp/>it&apos;s<sp/>not<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[funcs[0]()]</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(funcs)<sp/>&gt;<sp/>self.<ref refid="classpysc2_1_1lib_1_1run__parallel_1_1_run_parallel_1a11c9fd84fd9f2f5f0605b2cf25120e54" kindref="member">_workers</ref>:<sp/><sp/></highlight><highlight class="comment">#<sp/>Lazy<sp/>init<sp/>and<sp/>grow<sp/>as<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1run__parallel_1_1_run_parallel_1a3a4d5322d86770d3b32f58b76b544723" kindref="member">shutdown</ref>()</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1run__parallel_1_1_run_parallel_1a11c9fd84fd9f2f5f0605b2cf25120e54" kindref="member">_workers</ref><sp/>=<sp/>len(funcs)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1run__parallel_1_1_run_parallel_1a89ccc914a1c77fd67d9e016cbc82d07f" kindref="member">_executor</ref><sp/>=<sp/>futures.ThreadPoolExecutor(self.<ref refid="classpysc2_1_1lib_1_1run__parallel_1_1_run_parallel_1a11c9fd84fd9f2f5f0605b2cf25120e54" kindref="member">_workers</ref>)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>futs<sp/>=<sp/>[self.<ref refid="classpysc2_1_1lib_1_1run__parallel_1_1_run_parallel_1a89ccc914a1c77fd67d9e016cbc82d07f" kindref="member">_executor</ref>.submit(f)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>f<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>funcs]</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>done,<sp/>not_done<sp/>=<sp/>futures.wait(futs,<sp/>self.<ref refid="classpysc2_1_1lib_1_1run__parallel_1_1_run_parallel_1a1728fd65b70f801a017d41666da61191" kindref="member">_timeout</ref>,<sp/>futures.FIRST_EXCEPTION)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Make<sp/>sure<sp/>to<sp/>propagate<sp/>any<sp/>exceptions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>f<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>done:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>f.cancelled()<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>f.exception()<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>not_done:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>there<sp/>are<sp/>some<sp/>calls<sp/>that<sp/>haven&apos;t<sp/>finished,<sp/>cancel<sp/>and<sp/>recreate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>the<sp/>thread<sp/>pool.<sp/>Otherwise<sp/>we<sp/>may<sp/>have<sp/>a<sp/>thread<sp/>running<sp/>forever</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>blocking<sp/>parallel<sp/>calls.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>nd<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>not_done:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nd.cancel()</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1run__parallel_1_1_run_parallel_1a3a4d5322d86770d3b32f58b76b544723" kindref="member">shutdown</ref>(</highlight><highlight class="keyword">False</highlight><highlight class="normal">)<sp/><sp/></highlight><highlight class="comment">#<sp/>Don&apos;t<sp/>wait,<sp/>they<sp/>may<sp/>be<sp/>deadlocked.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>f.exception()</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Either<sp/>done<sp/>or<sp/>timed<sp/>out,<sp/>so<sp/>don&apos;t<sp/>wait<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[f.result(timeout=0)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>f<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>futs]</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1run__parallel_1_1_run_parallel_1a3a4d5322d86770d3b32f58b76b544723" kindref="member">shutdown</ref>(self,<sp/>wait=True):</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classpysc2_1_1lib_1_1run__parallel_1_1_run_parallel_1a89ccc914a1c77fd67d9e016cbc82d07f" kindref="member">_executor</ref>:</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1run__parallel_1_1_run_parallel_1a89ccc914a1c77fd67d9e016cbc82d07f" kindref="member">_executor</ref>.<ref refid="classpysc2_1_1lib_1_1run__parallel_1_1_run_parallel_1a3a4d5322d86770d3b32f58b76b544723" kindref="member">shutdown</ref>(wait)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1run__parallel_1_1_run_parallel_1a89ccc914a1c77fd67d9e016cbc82d07f" kindref="member">_executor</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1run__parallel_1_1_run_parallel_1a11c9fd84fd9f2f5f0605b2cf25120e54" kindref="member">_workers</ref><sp/>=<sp/>0</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1run__parallel_1_1_run_parallel_1ac948b68a569a8c31a3a0099513c187dc" kindref="member">__del__</ref>(self):</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1run__parallel_1_1_run_parallel_1a3a4d5322d86770d3b32f58b76b544723" kindref="member">shutdown</ref>()</highlight></codeline>
    </programlisting>
    <location file="lib/run_parallel.py"/>
  </compounddef>
</doxygen>
