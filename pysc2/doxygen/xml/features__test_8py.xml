<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="features__test_8py" kind="file" language="Python">
    <compoundname>features_test.py</compoundname>
    <innerclass refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test" prot="public">pysc2::lib::features_test::AvailableActionsTest</innerclass>
    <innerclass refid="classpysc2_1_1lib_1_1features__test_1_1_to_point_test" prot="public">pysc2::lib::features_test::ToPointTest</innerclass>
    <innerclass refid="classpysc2_1_1lib_1_1features__test_1_1_dimensions_test" prot="public">pysc2::lib::features_test::DimensionsTest</innerclass>
    <innerclass refid="classpysc2_1_1lib_1_1features__test_1_1_test_parse_agent_interface_format" prot="public">pysc2::lib::features_test::TestParseAgentInterfaceFormat</innerclass>
    <innerclass refid="classpysc2_1_1lib_1_1features__test_1_1_features_test" prot="public">pysc2::lib::features_test::FeaturesTest</innerclass>
    <innernamespace refid="namespacepysc2_1_1lib_1_1features__test">pysc2::lib::features_test</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacepysc2_1_1lib_1_1features__test" refkind="compound"><highlight class="comment">#!/usr/bin/python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Copyright<sp/>2017<sp/>Google<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS-IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;Tests<sp/>for<sp/>features.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>absolute_import</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>division</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>print_function</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>copy</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pickle</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>absl.testing<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>absltest</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>absl.testing<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>parameterized</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>future.builtins<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>range<sp/><sp/></highlight><highlight class="comment">#<sp/>pylint:<sp/>disable=redefined-builtin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>six</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacepysc2_1_1lib" kindref="compound">pysc2.lib</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>actions</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacepysc2_1_1lib" kindref="compound">pysc2.lib</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>features</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacepysc2_1_1lib" kindref="compound">pysc2.lib</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>point</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>google.protobuf<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>text_format</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>s2clientprotocol<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sc2api_pb2<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>sc_pb</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Heavily<sp/>trimmed,<sp/>so<sp/>this<sp/>is<sp/>useful<sp/>for<sp/>testing<sp/>actions,<sp/>but<sp/>not<sp/>observations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">observation_text_proto<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral">player_common<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral"><sp/><sp/>player_id:<sp/>1</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral"><sp/><sp/>minerals:<sp/>0</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"><sp/><sp/>vespene:<sp/>0</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"><sp/><sp/>food_cap:<sp/>10</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/>food_used:<sp/>0</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"><sp/><sp/>food_army:<sp/>0</highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral"><sp/><sp/>food_workers:<sp/>0</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"><sp/><sp/>idle_worker_count:<sp/>0</highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral"><sp/><sp/>army_count:<sp/>0</highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"><sp/><sp/>warp_gate_count:<sp/>0</highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral"><sp/><sp/>larva_count:<sp/>0</highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral">game_loop:<sp/>20</highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">RECTANGULAR_DIMENSIONS<sp/>=<sp/><ref refid="classpysc2_1_1lib_1_1features_1_1_dimensions" kindref="compound">features.Dimensions</ref>(screen=(84,<sp/>80),<sp/>minimap=(64,<sp/>67))</highlight></codeline>
<codeline lineno="57"><highlight class="normal">SQUARE_DIMENSIONS<sp/>=<sp/><ref refid="classpysc2_1_1lib_1_1features_1_1_dimensions" kindref="compound">features.Dimensions</ref>(screen=84,<sp/>minimap=64)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test" kindref="compound">AvailableActionsTest</ref>(absltest.TestCase):</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>always_expected<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;no_op&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;move_camera&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;select_point&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;select_rect&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;select_control_group&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a085183352ca922ab9a9c064bf97c2a29" kindref="member">setUp</ref>(self):</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>super(AvailableActionsTest,<sp/>self).<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a085183352ca922ab9a9c064bf97c2a29" kindref="member">setUp</ref>()</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a278a84d8d5a7f838888362ac5155c6de" kindref="member">obs</ref><sp/>=<sp/>text_format.Parse(observation_text_proto,<sp/>sc_pb.Observation())</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a1c9bfef603273fcfbdf206f7a0ef7620" kindref="member">hideSpecificActions</ref>(</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a1c9bfef603273fcfbdf206f7a0ef7620" kindref="member">hideSpecificActions</ref>(self,<sp/>hide_specific_actions):<sp/><sp/></highlight><highlight class="comment">#<sp/>pylint:<sp/>disable=invalid-name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a7bd625dacb0c1f3e691871778b8ba432" kindref="member">features</ref><sp/>=<sp/><ref refid="classpysc2_1_1lib_1_1features_1_1_features" kindref="compound">features.Features</ref>(<ref refid="classpysc2_1_1lib_1_1features_1_1_agent_interface_format" kindref="compound">features.AgentInterfaceFormat</ref>(</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_dimensions=RECTANGULAR_DIMENSIONS,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hide_specific_actions=hide_specific_actions))</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1af4d9c7bad6bec5202f096d73cfc641b3" kindref="member">assertAvail</ref>(self,<sp/>expected):</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>actual<sp/>=<sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a7bd625dacb0c1f3e691871778b8ba432" kindref="member">features</ref>.available_actions(self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a278a84d8d5a7f838888362ac5155c6de" kindref="member">obs</ref>)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>actual_names<sp/>=<sp/>{actions.FUNCTIONS[i].name<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>actual}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertEqual(actual_names,<sp/>set(expected)<sp/>|<sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a55cbd4d16deaac1b6dfd09667bcf5644" kindref="member">always_expected</ref>)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a2a9f056fe14cf0acb0bc47e4e1be6c61" kindref="member">testAlways</ref>(self):</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1af4d9c7bad6bec5202f096d73cfc641b3" kindref="member">assertAvail</ref>([])</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a5e280b23d7546871414c4eb0beced74b" kindref="member">testSelectUnit</ref>(self):</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a278a84d8d5a7f838888362ac5155c6de" kindref="member">obs</ref>.ui_data.multi.units.add(unit_type=1)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1af4d9c7bad6bec5202f096d73cfc641b3" kindref="member">assertAvail</ref>([</highlight><highlight class="stringliteral">&quot;select_unit&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1ab667d51eb6a9b38da9ac0ababe007daf" kindref="member">testSelectIdleWorkder</ref>(self):</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a278a84d8d5a7f838888362ac5155c6de" kindref="member">obs</ref>.player_common.idle_worker_count<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1af4d9c7bad6bec5202f096d73cfc641b3" kindref="member">assertAvail</ref>([</highlight><highlight class="stringliteral">&quot;select_idle_worker&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a0c4201958e89dce9568dc9f2d778ae5a" kindref="member">testSelectArmy</ref>(self):</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a278a84d8d5a7f838888362ac5155c6de" kindref="member">obs</ref>.player_common.army_count<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1af4d9c7bad6bec5202f096d73cfc641b3" kindref="member">assertAvail</ref>([</highlight><highlight class="stringliteral">&quot;select_army&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1afc40ca9b4dfc4f1386afff0dff62c85c" kindref="member">testSelectWarpGates</ref>(self):</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a278a84d8d5a7f838888362ac5155c6de" kindref="member">obs</ref>.player_common.warp_gate_count<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1af4d9c7bad6bec5202f096d73cfc641b3" kindref="member">assertAvail</ref>([</highlight><highlight class="stringliteral">&quot;select_warp_gates&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1af14c6e97325e81deefa0a4e2dca95ee6" kindref="member">testSelectLarva</ref>(self):</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a278a84d8d5a7f838888362ac5155c6de" kindref="member">obs</ref>.player_common.larva_count<sp/>=<sp/>2</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1af4d9c7bad6bec5202f096d73cfc641b3" kindref="member">assertAvail</ref>([</highlight><highlight class="stringliteral">&quot;select_larva&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a5daf15a6ed60b693b5af58dc78942297" kindref="member">testQuick</ref>(self):</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a278a84d8d5a7f838888362ac5155c6de" kindref="member">obs</ref>.abilities.add(ability_id=32)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1af4d9c7bad6bec5202f096d73cfc641b3" kindref="member">assertAvail</ref>([</highlight><highlight class="stringliteral">&quot;Effect_Salvage_quick&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a04b287433102571ee2a0d2fe8f092957" kindref="member">testScreen</ref>(self):</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a278a84d8d5a7f838888362ac5155c6de" kindref="member">obs</ref>.abilities.add(ability_id=326,<sp/>requires_point=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1af4d9c7bad6bec5202f096d73cfc641b3" kindref="member">assertAvail</ref>([</highlight><highlight class="stringliteral">&quot;Build_SensorTower_screen&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1abb7f4f31b32926091d499c71d49f2c5d" kindref="member">testScreenMinimap</ref>(self):</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a278a84d8d5a7f838888362ac5155c6de" kindref="member">obs</ref>.abilities.add(ability_id=17,<sp/>requires_point=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1af4d9c7bad6bec5202f096d73cfc641b3" kindref="member">assertAvail</ref>([</highlight><highlight class="stringliteral">&quot;Patrol_screen&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Patrol_minimap&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1aa45dcbb1016274aeeed4205e52fbd929" kindref="member">testScreenAutocast</ref>(self):</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a278a84d8d5a7f838888362ac5155c6de" kindref="member">obs</ref>.abilities.add(ability_id=386,<sp/>requires_point=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1af4d9c7bad6bec5202f096d73cfc641b3" kindref="member">assertAvail</ref>([</highlight><highlight class="stringliteral">&quot;Effect_Heal_screen&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Effect_Heal_autocast&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a553d3edfd2942d466b6ba94f4c4e0deb" kindref="member">testScreenQuick</ref>(self):</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a278a84d8d5a7f838888362ac5155c6de" kindref="member">obs</ref>.abilities.add(ability_id=421)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a1c9bfef603273fcfbdf206f7a0ef7620" kindref="member">hideSpecificActions</ref>(</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>a.requires_point<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1af4d9c7bad6bec5202f096d73cfc641b3" kindref="member">assertAvail</ref>([</highlight><highlight class="stringliteral">&quot;Build_TechLab_quick&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>a.requires_point<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1af4d9c7bad6bec5202f096d73cfc641b3" kindref="member">assertAvail</ref>([</highlight><highlight class="stringliteral">&quot;Build_TechLab_screen&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a1c9bfef603273fcfbdf206f7a0ef7620" kindref="member">hideSpecificActions</ref>(</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>a.requires_point<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1af4d9c7bad6bec5202f096d73cfc641b3" kindref="member">assertAvail</ref>([</highlight><highlight class="stringliteral">&quot;Build_TechLab_Barracks_quick&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Build_TechLab_quick&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>a.requires_point<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1af4d9c7bad6bec5202f096d73cfc641b3" kindref="member">assertAvail</ref>([</highlight><highlight class="stringliteral">&quot;Build_TechLab_Barracks_screen&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Build_TechLab_screen&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1ad6f0fbdcb2d4c10d1a78cfbbaf5035cd" kindref="member">testGeneral</ref>(self):</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a278a84d8d5a7f838888362ac5155c6de" kindref="member">obs</ref>.abilities.add(ability_id=1374)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a1c9bfef603273fcfbdf206f7a0ef7620" kindref="member">hideSpecificActions</ref>(</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1af4d9c7bad6bec5202f096d73cfc641b3" kindref="member">assertAvail</ref>([</highlight><highlight class="stringliteral">&quot;BurrowDown_quick&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;BurrowDown_Baneling_quick&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a1c9bfef603273fcfbdf206f7a0ef7620" kindref="member">hideSpecificActions</ref>(</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1af4d9c7bad6bec5202f096d73cfc641b3" kindref="member">assertAvail</ref>([</highlight><highlight class="stringliteral">&quot;BurrowDown_quick&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a46f45bb4380146cc1b12ee89ecd7f784" kindref="member">testGeneralType</ref>(self):</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a278a84d8d5a7f838888362ac5155c6de" kindref="member">obs</ref>.abilities.add(ability_id=1376)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a1c9bfef603273fcfbdf206f7a0ef7620" kindref="member">hideSpecificActions</ref>(</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1af4d9c7bad6bec5202f096d73cfc641b3" kindref="member">assertAvail</ref>([</highlight><highlight class="stringliteral">&quot;BurrowUp_quick&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;BurrowUp_Baneling_quick&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;BurrowUp_autocast&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;BurrowUp_Baneling_autocast&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a1c9bfef603273fcfbdf206f7a0ef7620" kindref="member">hideSpecificActions</ref>(</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1af4d9c7bad6bec5202f096d73cfc641b3" kindref="member">assertAvail</ref>([</highlight><highlight class="stringliteral">&quot;BurrowUp_quick&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;BurrowUp_autocast&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>a.ability_id<sp/>=<sp/>2110</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a1c9bfef603273fcfbdf206f7a0ef7620" kindref="member">hideSpecificActions</ref>(</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1af4d9c7bad6bec5202f096d73cfc641b3" kindref="member">assertAvail</ref>([</highlight><highlight class="stringliteral">&quot;BurrowUp_quick&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;BurrowUp_Lurker_quick&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a1c9bfef603273fcfbdf206f7a0ef7620" kindref="member">hideSpecificActions</ref>(</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1af4d9c7bad6bec5202f096d73cfc641b3" kindref="member">assertAvail</ref>([</highlight><highlight class="stringliteral">&quot;BurrowUp_quick&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a6c75f62739b0fda29d141508915d19f1" kindref="member">testMany</ref>(self):</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>add<sp/>=<sp/>[</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(23,<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">),<sp/><sp/></highlight><highlight class="comment">#<sp/>Attack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(318,<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">),<sp/><sp/></highlight><highlight class="comment">#<sp/>Build_CommandCenter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(320,<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">),<sp/><sp/></highlight><highlight class="comment">#<sp/>Build_Refinery</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(319,<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">),<sp/><sp/></highlight><highlight class="comment">#<sp/>Build_SupplyDepot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(316,<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">),<sp/><sp/></highlight><highlight class="comment">#<sp/>Effect_Repair_SCV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(295,<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">),<sp/><sp/></highlight><highlight class="comment">#<sp/>Harvest_Gather_SCV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(16,<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">),<sp/><sp/></highlight><highlight class="comment">#<sp/>Move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(17,<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">),<sp/><sp/></highlight><highlight class="comment">#<sp/>Patrol</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(4,<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">),<sp/><sp/></highlight><highlight class="comment">#<sp/>Stop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>a,<sp/>r<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>add:</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a278a84d8d5a7f838888362ac5155c6de" kindref="member">obs</ref>.abilities.add(ability_id=a,<sp/>requires_point=r)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a1c9bfef603273fcfbdf206f7a0ef7620" kindref="member">hideSpecificActions</ref>(</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1af4d9c7bad6bec5202f096d73cfc641b3" kindref="member">assertAvail</ref>([</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Attack_Attack_minimap&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Attack_Attack_screen&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Attack_minimap&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Attack_screen&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Build_CommandCenter_screen&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Build_Refinery_screen&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Build_SupplyDepot_screen&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Effect_Repair_screen&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Effect_Repair_autocast&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Effect_Repair_SCV_autocast&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Effect_Repair_SCV_screen&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Harvest_Gather_screen&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Harvest_Gather_SCV_screen&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Move_minimap&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Move_screen&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Patrol_minimap&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Patrol_screen&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Stop_quick&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Stop_Stop_quick&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>])</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1a1c9bfef603273fcfbdf206f7a0ef7620" kindref="member">hideSpecificActions</ref>(</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_available_actions_test_1af4d9c7bad6bec5202f096d73cfc641b3" kindref="member">assertAvail</ref>([</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Attack_minimap&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Attack_screen&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Build_CommandCenter_screen&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Build_Refinery_screen&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Build_SupplyDepot_screen&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Effect_Repair_screen&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Effect_Repair_autocast&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Harvest_Gather_screen&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Move_minimap&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Move_screen&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Patrol_minimap&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Patrol_screen&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Stop_quick&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>])</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="classpysc2_1_1lib_1_1features__test_1_1_to_point_test" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_to_point_test" kindref="compound">ToPointTest</ref>(absltest.TestCase):</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_to_point_test_1a14f6d3c6e3d2451942ef0c66a44451de" kindref="member">testIntAsString</ref>(self):</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>features._to_point(</highlight><highlight class="stringliteral">&quot;32&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertEqual(value,<sp/><ref refid="classpysc2_1_1lib_1_1point_1_1_point" kindref="compound">point.Point</ref>(32,<sp/>32))</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_to_point_test_1a43fc921aaffa77540dc976de5f3bd8cc" kindref="member">testIntStringTwoTuple</ref>(self):</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>features._to_point((</highlight><highlight class="stringliteral">&quot;32&quot;</highlight><highlight class="normal">,<sp/>64))</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertEqual(value,<sp/><ref refid="classpysc2_1_1lib_1_1point_1_1_point" kindref="compound">point.Point</ref>(32,<sp/>64))</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_to_point_test_1a4ef667637e5ccc52e0b726ef1051aa64" kindref="member">testNoneInputReturnsNoneOutput</ref>(self):</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>with<sp/>self.assertRaises(AssertionError):</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>features._to_point(</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_to_point_test_1ac4272f810b837ad6728a8d1fd82e359f" kindref="member">testNoneAsFirstElementOfTupleRaises</ref>(self):</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>with<sp/>self.assertRaises(TypeError):</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>features._to_point((</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>32))</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_to_point_test_1a08a5a31ac47f983590735d071ee31188" kindref="member">testNoneAsSecondElementOfTupleRaises</ref>(self):</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>with<sp/>self.assertRaises(TypeError):</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>features._to_point((32,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_to_point_test_1a58067e629bc6a94a0e7a8eaf00c1a654" kindref="member">testSingletonTupleRaises</ref>(self):</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>with<sp/>self.assertRaises(ValueError):</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>features._to_point((32,))</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_to_point_test_1a78db58e7a01b6843e85527ed7782a1b8" kindref="member">testThreeTupleRaises</ref>(self):</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>with<sp/>self.assertRaises(ValueError):</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>features._to_point((32,<sp/>32,<sp/>32))</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="classpysc2_1_1lib_1_1features__test_1_1_dimensions_test" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_dimensions_test" kindref="compound">DimensionsTest</ref>(absltest.TestCase):</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_dimensions_test_1a656658d118ecf0dec068a5f1f840480a" kindref="member">testScreenSizeWithoutMinimapRaises</ref>(self):</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>with<sp/>self.assertRaises(ValueError):</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpysc2_1_1lib_1_1features_1_1_dimensions" kindref="compound">features.Dimensions</ref>(screen=84)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_dimensions_test_1a5d54ae68a70ede7e77ebc5a82f9bb363" kindref="member">testScreenWidthWithoutHeightRaises</ref>(self):</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>with<sp/>self.assertRaises(ValueError):</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpysc2_1_1lib_1_1features_1_1_dimensions" kindref="compound">features.Dimensions</ref>(screen=(84,<sp/>0),<sp/>minimap=64)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_dimensions_test_1a98381d48e02f0575e16df437120ad0b6" kindref="member">testScreenWidthHeightWithoutMinimapRaises</ref>(self):</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>with<sp/>self.assertRaises(ValueError):</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpysc2_1_1lib_1_1features_1_1_dimensions" kindref="compound">features.Dimensions</ref>(screen=(84,<sp/>80))</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_dimensions_test_1a477eb9b53b64219aa10f5460a1e2735a" kindref="member">testMinimapWidthAndHeightWithoutScreenRaises</ref>(self):</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>with<sp/>self.assertRaises(ValueError):</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpysc2_1_1lib_1_1features_1_1_dimensions" kindref="compound">features.Dimensions</ref>(minimap=(64,<sp/>67))</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_dimensions_test_1af6f69ee9ae5eb17bc7e324caa7add776" kindref="member">testScreenSmallerThanMinimapRaises</ref>(self):</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>with<sp/>self.assertRaises(ValueError):</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpysc2_1_1lib_1_1features_1_1_dimensions" kindref="compound">features.Dimensions</ref>(screen=84,<sp/>minimap=100)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_dimensions_test_1a68a0e81f9af4953ef8e51e2376296c86" kindref="member">testNoneNoneRaises</ref>(self):</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>with<sp/>self.assertRaises(ValueError):</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpysc2_1_1lib_1_1features_1_1_dimensions" kindref="compound">features.Dimensions</ref>(screen=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>minimap=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_dimensions_test_1a715543385b64f77ed16e6370fbba56fd" kindref="member">testSingularZeroesRaises</ref>(self):</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>with<sp/>self.assertRaises(ValueError):</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpysc2_1_1lib_1_1features_1_1_dimensions" kindref="compound">features.Dimensions</ref>(screen=0,<sp/>minimap=0)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_dimensions_test_1a415323bb2471aecc5255d210cbd99801" kindref="member">testTwoZeroesRaises</ref>(self):</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>with<sp/>self.assertRaises(ValueError):</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpysc2_1_1lib_1_1features_1_1_dimensions" kindref="compound">features.Dimensions</ref>(screen=(0,<sp/>0),<sp/>minimap=(0,<sp/>0))</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_dimensions_test_1a43f03496b5f601bfcd4a2b43d16bd165" kindref="member">testThreeTupleScreenRaises</ref>(self):</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>with<sp/>self.assertRaises(ValueError):</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpysc2_1_1lib_1_1features_1_1_dimensions" kindref="compound">features.Dimensions</ref>(screen=(1,<sp/>2,<sp/>3),<sp/>minimap=32)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_dimensions_test_1a9bf1bf5fd35bf14528343c64e92cfa3e" kindref="member">testThreeTupleMinimapRaises</ref>(self):</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>with<sp/>self.assertRaises(ValueError):</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpysc2_1_1lib_1_1features_1_1_dimensions" kindref="compound">features.Dimensions</ref>(screen=64,<sp/>minimap=(1,<sp/>2,<sp/>3))</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_dimensions_test_1a6818938975cbcea85dcc17ee1d506053" kindref="member">testNegativeScreenRaises</ref>(self):</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>with<sp/>self.assertRaises(ValueError):</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpysc2_1_1lib_1_1features_1_1_dimensions" kindref="compound">features.Dimensions</ref>(screen=-64,<sp/>minimap=32)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_dimensions_test_1a689adbba28df393a9b16b36413b08d29" kindref="member">testNegativeMinimapRaises</ref>(self):</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>with<sp/>self.assertRaises(ValueError):</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpysc2_1_1lib_1_1features_1_1_dimensions" kindref="compound">features.Dimensions</ref>(screen=64,<sp/>minimap=-32)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_dimensions_test_1a4fa9ba1d024fbee643cca67ed215627d" kindref="member">testNegativeScreenTupleRaises</ref>(self):</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>with<sp/>self.assertRaises(ValueError):</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpysc2_1_1lib_1_1features_1_1_dimensions" kindref="compound">features.Dimensions</ref>(screen=(-64,<sp/>-64),<sp/>minimap=32)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_dimensions_test_1ac762a20913b445f3137cf72191edff70" kindref="member">testNegativeMinimapTupleRaises</ref>(self):</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>with<sp/>self.assertRaises(ValueError):</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpysc2_1_1lib_1_1features_1_1_dimensions" kindref="compound">features.Dimensions</ref>(screen=64,<sp/>minimap=(-32,<sp/>-32))</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301" refid="classpysc2_1_1lib_1_1features__test_1_1_test_parse_agent_interface_format" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_test_parse_agent_interface_format" kindref="compound">TestParseAgentInterfaceFormat</ref>(parameterized.TestCase):</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_test_parse_agent_interface_format_1ab7e830cda6ac5cd5b2b7df2de3d3d987" kindref="member">test_no_arguments_raises</ref>(self):</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>with<sp/>self.assertRaises(ValueError):</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>features.parse_agent_interface_format()</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>@parameterized.parameters((32,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">),<sp/>(</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>32))</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_test_parse_agent_interface_format_1a0aac626ffc7c5f1395a73e044b2cbbfe" kindref="member">test_invalid_feature_combinations_raise</ref>(self,<sp/>screen,<sp/>minimap):</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>with<sp/>self.assertRaises(ValueError):</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>features.parse_agent_interface_format(</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_screen=screen,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_minimap=minimap)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_test_parse_agent_interface_format_1a0b68ba647c6054b50fce7db1aa1510bf" kindref="member">test_valid_feature_specification_is_parsed</ref>(self):</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>agent_interface_format<sp/>=<sp/>features.parse_agent_interface_format(</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_screen=32,</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_minimap=(24,<sp/>24))</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertEqual(</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_interface_format.feature_dimensions.screen,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpysc2_1_1lib_1_1point_1_1_point" kindref="compound">point.Point</ref>(32,<sp/>32))</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertEqual(</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_interface_format.feature_dimensions.minimap,</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpysc2_1_1lib_1_1point_1_1_point" kindref="compound">point.Point</ref>(24,<sp/>24))</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>@parameterized.parameters((32,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">),<sp/>(</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>32))</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_test_parse_agent_interface_format_1a2f3976383c3c180d453170333b2ebe87" kindref="member">test_invalid_minimap_combinations_raise</ref>(self,<sp/>screen,<sp/>minimap):</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>with<sp/>self.assertRaises(ValueError):</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>features.parse_agent_interface_format(</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rgb_screen=screen,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rgb_minimap=minimap)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_test_parse_agent_interface_format_1a9653bf89a6d54bcb364f525432a61a67" kindref="member">test_valid_minimap_specification_is_parsed</ref>(self):</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>agent_interface_format<sp/>=<sp/>features.parse_agent_interface_format(</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rgb_screen=32,</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rgb_minimap=(24,<sp/>24))</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertEqual(</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_interface_format.rgb_dimensions.screen,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpysc2_1_1lib_1_1point_1_1_point" kindref="compound">point.Point</ref>(32,<sp/>32))</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertEqual(</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_interface_format.rgb_dimensions.minimap,</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpysc2_1_1lib_1_1point_1_1_point" kindref="compound">point.Point</ref>(24,<sp/>24))</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_test_parse_agent_interface_format_1ad09fc74c7bdbc03a947d97363e2f9e8b" kindref="member">test_invalid_action_space_raises</ref>(self):</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>with<sp/>self.assertRaises(KeyError):</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>features.parse_agent_interface_format(</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_screen=64,</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_minimap=64,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action_space=</highlight><highlight class="stringliteral">&quot;UNKNOWN_ACTION_SPACE&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>@parameterized.parameters(actions.ActionSpace.__members__.keys())</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_test_parse_agent_interface_format_1a739eb383d26cc2c5a3a11caf2843ca68" kindref="member">test_valid_action_space_is_parsed</ref>(self,<sp/>action_space):</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>agent_interface_format<sp/>=<sp/>features.parse_agent_interface_format(</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_screen=32,</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_minimap=(24,<sp/>24),</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rgb_screen=64,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rgb_minimap=(48,<sp/>48),</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action_space=action_space)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertEqual(</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>agent_interface_format.action_space,</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpysc2_1_1lib_1_1actions_1_1_action_space" kindref="compound">actions.ActionSpace</ref>[action_space])</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_test_parse_agent_interface_format_1a29240436a6e58284a0ab15c0f8533286" kindref="member">test_camera_width_world_units_are_parsed</ref>(self):</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>agent_interface_format<sp/>=<sp/>features.parse_agent_interface_format(</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_screen=32,</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_minimap=(24,<sp/>24),</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera_width_world_units=77)</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertEqual(agent_interface_format.camera_width_world_units,<sp/>77)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_test_parse_agent_interface_format_1a097e74a89a782ff9f9922d3e2a5b0d07" kindref="member">test_use_feature_units_is_parsed</ref>(self):</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>agent_interface_format<sp/>=<sp/>features.parse_agent_interface_format(</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_screen=32,</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_minimap=(24,<sp/>24),</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_feature_units=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertEqual(agent_interface_format.use_feature_units,<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384" refid="classpysc2_1_1lib_1_1features__test_1_1_features_test" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_features_test" kindref="compound">FeaturesTest</ref>(absltest.TestCase):</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_features_test_1ae155ba0432bbdf3c0637edde339a4bf3" kindref="member">testFunctionsIdsAreConsistent</ref>(self):</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i,<sp/>f<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(actions.FUNCTIONS):</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(i,<sp/>f.id,<sp/></highlight><highlight class="stringliteral">&quot;id<sp/>doesn&apos;t<sp/>match<sp/>for<sp/>%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>f.id)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_features_test_1a9caf3659f3783bd5cb55e47fea09fdf4" kindref="member">testAllVersionsOfAnAbilityHaveTheSameGeneral</ref>(self):</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ability_id,<sp/>funcs<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>six.iteritems(actions.ABILITY_IDS):</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(len({f.general_id<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>f<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>funcs}),<sp/>1,</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Multiple<sp/>generals<sp/>for<sp/>%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>ability_id)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_features_test_1a174e0178a227e367c212dc99de396dab" kindref="member">testValidFunctionsAreConsistent</ref>(self):</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>feats<sp/>=<sp/><ref refid="classpysc2_1_1lib_1_1features_1_1_features" kindref="compound">features.Features</ref>(<ref refid="classpysc2_1_1lib_1_1features_1_1_agent_interface_format" kindref="compound">features.AgentInterfaceFormat</ref>(</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_dimensions=RECTANGULAR_DIMENSIONS))</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>valid_funcs<sp/>=<sp/>feats.action_spec()</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>func_def<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>valid_funcs.functions:</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>func<sp/>=<sp/>actions.FUNCTIONS[func_def.id]</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(func_def.id,<sp/>func.id)</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(func_def.name,<sp/>func.name)</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(len(func_def.args),<sp/>len(func.args))</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_features_test_1af14dc6f548faff56839d0b6d2ffb0af9" kindref="member">gen_random_function_call</ref>(self,<sp/>action_spec,<sp/>func_id):</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>args<sp/>=<sp/>[[numpy.random.randint(0,<sp/>size)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>size<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>arg.sizes]</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>arg<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>action_spec.functions[func_id].args]</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classpysc2_1_1lib_1_1actions_1_1_function_call" kindref="compound">actions.FunctionCall</ref>(func_id,<sp/>args)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_features_test_1a4e3f221ce65b9d51eab877ba66bd8c9a" kindref="member">testIdsMatchIndex</ref>(self):</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>feats<sp/>=<sp/><ref refid="classpysc2_1_1lib_1_1features_1_1_features" kindref="compound">features.Features</ref>(<ref refid="classpysc2_1_1lib_1_1features_1_1_agent_interface_format" kindref="compound">features.AgentInterfaceFormat</ref>(</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_dimensions=RECTANGULAR_DIMENSIONS))</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>action_spec<sp/>=<sp/>feats.action_spec()</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>func_index,<sp/>func_def<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(action_spec.functions):</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(func_index,<sp/>func_def.id)</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>type_index,<sp/>type_def<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(action_spec.types):</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(type_index,<sp/>type_def.id)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_features_test_1ad4095c1ac9fa6ecfa7b0824eeb39972a" kindref="member">testReversingUnknownAction</ref>(self):</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>feats<sp/>=<sp/><ref refid="classpysc2_1_1lib_1_1features_1_1_features" kindref="compound">features.Features</ref>(<ref refid="classpysc2_1_1lib_1_1features_1_1_agent_interface_format" kindref="compound">features.AgentInterfaceFormat</ref>(</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_dimensions=RECTANGULAR_DIMENSIONS,</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hide_specific_actions=</highlight><highlight class="keyword">False</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>sc2_action<sp/>=<sp/>sc_pb.Action()</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>sc2_action.action_feature_layer.unit_command.ability_id<sp/>=<sp/>6<sp/><sp/></highlight><highlight class="comment">#<sp/>Cheer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>func_call<sp/>=<sp/>feats.reverse_action(sc2_action)</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertEqual(func_call.function,<sp/>0)<sp/><sp/></highlight><highlight class="comment">#<sp/>No-op</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_features_test_1a47c11cce3301e4e196d58febbbfdca1b" kindref="member">testSpecificActionsAreReversible</ref>(self):</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Test<sp/>that<sp/>the<sp/>`transform_action`<sp/>and<sp/>`reverse_action`<sp/>are<sp/>inverses.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>feats<sp/>=<sp/><ref refid="classpysc2_1_1lib_1_1features_1_1_features" kindref="compound">features.Features</ref>(<ref refid="classpysc2_1_1lib_1_1features_1_1_agent_interface_format" kindref="compound">features.AgentInterfaceFormat</ref>(</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_dimensions=RECTANGULAR_DIMENSIONS,</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hide_specific_actions=</highlight><highlight class="keyword">False</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>action_spec<sp/>=<sp/>feats.action_spec()</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>func_def<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>action_spec.functions:</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(10):</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func_call<sp/>=<sp/>self.<ref refid="classpysc2_1_1lib_1_1features__test_1_1_features_test_1af14dc6f548faff56839d0b6d2ffb0af9" kindref="member">gen_random_function_call</ref>(action_spec,<sp/>func_def.id)</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sc2_action<sp/>=<sp/>feats.transform_action(</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>func_call,<sp/>skip_available=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func_call2<sp/>=<sp/>feats.reverse_action(sc2_action)</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sc2_action2<sp/>=<sp/>feats.transform_action(</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>func_call2,<sp/>skip_available=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>func_def.id<sp/>==<sp/>actions.FUNCTIONS.select_rect.id:</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Need<sp/>to<sp/>check<sp/>this<sp/>one<sp/>manually<sp/>since<sp/>the<sp/>same<sp/>rect<sp/>can<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>defined<sp/>in<sp/>multiple<sp/>ways.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">rect(a):</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classpysc2_1_1lib_1_1point_1_1_rect" kindref="compound">point.Rect</ref>(<ref refid="classpysc2_1_1lib_1_1point_1_1_point" kindref="compound">point.Point</ref>(*a[1]).floor(),</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpysc2_1_1lib_1_1point_1_1_point" kindref="compound">point.Point</ref>(*a[2]).floor())</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(func_call.function,<sp/>func_call2.function)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(len(func_call.arguments),<sp/>len(func_call2.arguments))</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(func_call.arguments[0],<sp/>func_call2.arguments[0])</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(rect(func_call.arguments),</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rect(func_call2.arguments))</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(func_call,<sp/>func_call2,<sp/>msg=sc2_action)</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(sc2_action,<sp/>sc2_action2)</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_features_test_1aaa465371eb5f843df3b7d0b8b7b8e3c1" kindref="member">testCanPickleSpecs</ref>(self):</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>feats<sp/>=<sp/><ref refid="classpysc2_1_1lib_1_1features_1_1_features" kindref="compound">features.Features</ref>(<ref refid="classpysc2_1_1lib_1_1features_1_1_agent_interface_format" kindref="compound">features.AgentInterfaceFormat</ref>(</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_dimensions=SQUARE_DIMENSIONS))</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>action_spec<sp/>=<sp/>feats.action_spec()</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>observation_spec<sp/>=<sp/>feats.observation_spec()</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertEqual(action_spec,<sp/>pickle.loads(pickle.dumps(action_spec)))</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertEqual(observation_spec,</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pickle.loads(pickle.dumps(observation_spec)))</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_features_test_1a9dfbb6050949524fbe9eaddc307c60a9" kindref="member">testCanPickleFunctionCall</ref>(self):</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>func<sp/>=<sp/>actions.FUNCTIONS.select_point(</highlight><highlight class="stringliteral">&quot;select&quot;</highlight><highlight class="normal">,<sp/>[1,<sp/>2])</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertEqual(func,<sp/>pickle.loads(pickle.dumps(func)))</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_features_test_1aabcdc707b4f55ce05986959787f034c1" kindref="member">testCanDeepcopyNumpyFunctionCall</ref>(self):</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>arguments<sp/>=<sp/>[numpy.float32]<sp/>*<sp/>len(actions.Arguments._fields)</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>dtypes<sp/>=<sp/><ref refid="classpysc2_1_1lib_1_1actions_1_1_function_call" kindref="compound">actions.FunctionCall</ref>(</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function=numpy.float32,</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arguments=<ref refid="classpysc2_1_1lib_1_1actions_1_1_arguments" kindref="compound">actions.Arguments</ref>(*arguments))</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertEqual(dtypes,<sp/>copy.deepcopy(dtypes))</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_features_test_1a55941b95526a89d67c4f1ac577bc6cac" kindref="member">testSizeConstructors</ref>(self):</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>feats<sp/>=<sp/><ref refid="classpysc2_1_1lib_1_1features_1_1_features" kindref="compound">features.Features</ref>(<ref refid="classpysc2_1_1lib_1_1features_1_1_agent_interface_format" kindref="compound">features.AgentInterfaceFormat</ref>(</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_dimensions=SQUARE_DIMENSIONS))</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>spec<sp/>=<sp/>feats.action_spec()</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertEqual(spec.types.screen.sizes,<sp/>(84,<sp/>84))</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertEqual(spec.types.screen2.sizes,<sp/>(84,<sp/>84))</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertEqual(spec.types.minimap.sizes,<sp/>(64,<sp/>64))</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>feats<sp/>=<sp/><ref refid="classpysc2_1_1lib_1_1features_1_1_features" kindref="compound">features.Features</ref>(<ref refid="classpysc2_1_1lib_1_1features_1_1_agent_interface_format" kindref="compound">features.AgentInterfaceFormat</ref>(</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_dimensions=RECTANGULAR_DIMENSIONS))</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>spec<sp/>=<sp/>feats.action_spec()</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertEqual(spec.types.screen.sizes,<sp/>(84,<sp/>80))</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertEqual(spec.types.screen2.sizes,<sp/>(84,<sp/>80))</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertEqual(spec.types.minimap.sizes,<sp/>(64,<sp/>67))</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>feats<sp/>=<sp/><ref refid="classpysc2_1_1lib_1_1features_1_1_features" kindref="compound">features.Features</ref>(<ref refid="classpysc2_1_1lib_1_1features_1_1_agent_interface_format" kindref="compound">features.AgentInterfaceFormat</ref>(</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_dimensions=RECTANGULAR_DIMENSIONS))</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>spec<sp/>=<sp/>feats.action_spec()</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertEqual(spec.types.screen.sizes,<sp/>(84,<sp/>80))</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertEqual(spec.types.screen2.sizes,<sp/>(84,<sp/>80))</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertEqual(spec.types.minimap.sizes,<sp/>(64,<sp/>67))</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Missing<sp/>one<sp/>or<sp/>the<sp/>other<sp/>of<sp/>game_info<sp/>and<sp/>dimensions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>with<sp/>self.assertRaises(ValueError):</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpysc2_1_1lib_1_1features_1_1_features" kindref="compound">features.Features</ref>()</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Resolution/action<sp/>space<sp/>mismatch.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>with<sp/>self.assertRaises(ValueError):</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpysc2_1_1lib_1_1features_1_1_features" kindref="compound">features.Features</ref>(<ref refid="classpysc2_1_1lib_1_1features_1_1_agent_interface_format" kindref="compound">features.AgentInterfaceFormat</ref>(</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_dimensions=RECTANGULAR_DIMENSIONS,</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action_space=actions.ActionSpace.RGB))</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>with<sp/>self.assertRaises(ValueError):</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpysc2_1_1lib_1_1features_1_1_features" kindref="compound">features.Features</ref>(<ref refid="classpysc2_1_1lib_1_1features_1_1_agent_interface_format" kindref="compound">features.AgentInterfaceFormat</ref>(</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rgb_dimensions=RECTANGULAR_DIMENSIONS,</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action_space=actions.ActionSpace.FEATURES))</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>with<sp/>self.assertRaises(ValueError):</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpysc2_1_1lib_1_1features_1_1_features" kindref="compound">features.Features</ref>(<ref refid="classpysc2_1_1lib_1_1features_1_1_agent_interface_format" kindref="compound">features.AgentInterfaceFormat</ref>(</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_dimensions=RECTANGULAR_DIMENSIONS,</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rgb_dimensions=RECTANGULAR_DIMENSIONS))</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_features_test_1abd061b800bbe5cc61f11740d27411fb4" kindref="member">testFlRgbActionSpec</ref>(self):</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>feats<sp/>=<sp/><ref refid="classpysc2_1_1lib_1_1features_1_1_features" kindref="compound">features.Features</ref>(<ref refid="classpysc2_1_1lib_1_1features_1_1_agent_interface_format" kindref="compound">features.AgentInterfaceFormat</ref>(</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_dimensions=RECTANGULAR_DIMENSIONS,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rgb_dimensions=<ref refid="classpysc2_1_1lib_1_1features_1_1_dimensions" kindref="compound">features.Dimensions</ref>(screen=(128,<sp/>132),<sp/>minimap=(74,<sp/>77)),</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action_space=actions.ActionSpace.FEATURES))</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>spec<sp/>=<sp/>feats.action_spec()</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertEqual(spec.types.screen.sizes,<sp/>(84,<sp/>80))</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertEqual(spec.types.screen2.sizes,<sp/>(84,<sp/>80))</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertEqual(spec.types.minimap.sizes,<sp/>(64,<sp/>67))</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>feats<sp/>=<sp/><ref refid="classpysc2_1_1lib_1_1features_1_1_features" kindref="compound">features.Features</ref>(<ref refid="classpysc2_1_1lib_1_1features_1_1_agent_interface_format" kindref="compound">features.AgentInterfaceFormat</ref>(</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_dimensions=RECTANGULAR_DIMENSIONS,</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rgb_dimensions=<ref refid="classpysc2_1_1lib_1_1features_1_1_dimensions" kindref="compound">features.Dimensions</ref>(screen=(128,<sp/>132),<sp/>minimap=(74,<sp/>77)),</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action_space=actions.ActionSpace.RGB))</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>spec<sp/>=<sp/>feats.action_spec()</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertEqual(spec.types.screen.sizes,<sp/>(128,<sp/>132))</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertEqual(spec.types.screen2.sizes,<sp/>(128,<sp/>132))</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertEqual(spec.types.minimap.sizes,<sp/>(74,<sp/>77))</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1features__test_1_1_features_test_1a9b48fdd9a34b1891d18561867d4cd7a8" kindref="member">testFlRgbObservationSpec</ref>(self):</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>feats<sp/>=<sp/><ref refid="classpysc2_1_1lib_1_1features_1_1_features" kindref="compound">features.Features</ref>(<ref refid="classpysc2_1_1lib_1_1features_1_1_agent_interface_format" kindref="compound">features.AgentInterfaceFormat</ref>(</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_dimensions=RECTANGULAR_DIMENSIONS,</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rgb_dimensions=<ref refid="classpysc2_1_1lib_1_1features_1_1_dimensions" kindref="compound">features.Dimensions</ref>(screen=(128,<sp/>132),<sp/>minimap=(74,<sp/>77)),</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action_space=actions.ActionSpace.FEATURES))</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>obs_spec<sp/>=<sp/>feats.observation_spec()</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertEqual(obs_spec[</highlight><highlight class="stringliteral">&quot;feature_screen&quot;</highlight><highlight class="normal">],<sp/>(17,<sp/>80,<sp/>84))</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertEqual(obs_spec[</highlight><highlight class="stringliteral">&quot;feature_minimap&quot;</highlight><highlight class="normal">],<sp/>(7,<sp/>67,<sp/>64))</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertEqual(obs_spec[</highlight><highlight class="stringliteral">&quot;rgb_screen&quot;</highlight><highlight class="normal">],<sp/>(132,<sp/>128,<sp/>3))</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>self.assertEqual(obs_spec[</highlight><highlight class="stringliteral">&quot;rgb_minimap&quot;</highlight><highlight class="normal">],<sp/>(77,<sp/>74,<sp/>3))</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;__main__&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/>absltest.main()</highlight></codeline>
    </programlisting>
    <location file="lib/features_test.py"/>
  </compounddef>
</doxygen>
