<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="scripted__agent_8py" kind="file" language="Python">
    <compoundname>scripted_agent.py</compoundname>
    <innerclass refid="classpysc2_1_1agents_1_1scripted__agent_1_1_move_to_beacon" prot="public">pysc2::agents::scripted_agent::MoveToBeacon</innerclass>
    <innerclass refid="classpysc2_1_1agents_1_1scripted__agent_1_1_collect_mineral_shards" prot="public">pysc2::agents::scripted_agent::CollectMineralShards</innerclass>
    <innerclass refid="classpysc2_1_1agents_1_1scripted__agent_1_1_collect_mineral_shards_feature_units" prot="public">pysc2::agents::scripted_agent::CollectMineralShardsFeatureUnits</innerclass>
    <innerclass refid="classpysc2_1_1agents_1_1scripted__agent_1_1_defeat_roaches" prot="public">pysc2::agents::scripted_agent::DefeatRoaches</innerclass>
    <innernamespace refid="namespacepysc2_1_1agents_1_1scripted__agent">pysc2::agents::scripted_agent</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacepysc2_1_1agents_1_1scripted__agent" refkind="compound"><highlight class="comment">#<sp/>Copyright<sp/>2017<sp/>Google<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS-IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;Scripted<sp/>agents.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>absolute_import</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>division</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>print_function</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacepysc2_1_1agents" kindref="compound">pysc2.agents</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>base_agent</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacepysc2_1_1lib" kindref="compound">pysc2.lib</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>actions</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacepysc2_1_1lib" kindref="compound">pysc2.lib</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>features</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">_PLAYER_SELF<sp/>=<sp/>features.PlayerRelative.SELF</highlight></codeline>
<codeline lineno="27"><highlight class="normal">_PLAYER_NEUTRAL<sp/>=<sp/>features.PlayerRelative.NEUTRAL<sp/><sp/></highlight><highlight class="comment">#<sp/>beacon/minerals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">_PLAYER_ENEMY<sp/>=<sp/>features.PlayerRelative.ENEMY</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">FUNCTIONS<sp/>=<sp/>actions.FUNCTIONS</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_xy_locs(mask):</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Mask<sp/>should<sp/>be<sp/>a<sp/>set<sp/>of<sp/>bools<sp/>from<sp/>comparison<sp/>with<sp/>a<sp/>feature<sp/>layer.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>y,<sp/>x<sp/>=<sp/>mask.nonzero()</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>list(zip(x,<sp/>y))</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classpysc2_1_1agents_1_1scripted__agent_1_1_move_to_beacon" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1agents_1_1scripted__agent_1_1_move_to_beacon" kindref="compound">MoveToBeacon</ref>(<ref refid="classpysc2_1_1agents_1_1base__agent_1_1_base_agent" kindref="compound">base_agent.BaseAgent</ref>):</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;An<sp/>agent<sp/>specifically<sp/>for<sp/>solving<sp/>the<sp/>MoveToBeacon<sp/>map.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1agents_1_1scripted__agent_1_1_move_to_beacon_1a4406bec055e5e0d8e7dccac7fc2abf83" kindref="member">step</ref>(self,<sp/>obs):</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>super(MoveToBeacon,<sp/>self).<ref refid="classpysc2_1_1agents_1_1scripted__agent_1_1_move_to_beacon_1a4406bec055e5e0d8e7dccac7fc2abf83" kindref="member">step</ref>(obs)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>FUNCTIONS.Move_screen.id<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>obs.observation.available_actions:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>player_relative<sp/>=<sp/>obs.observation.feature_screen.player_relative</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>beacon<sp/>=<sp/>_xy_locs(player_relative<sp/>==<sp/>_PLAYER_NEUTRAL)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>beacon:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FUNCTIONS.no_op()</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>beacon_center<sp/>=<sp/>numpy.mean(beacon,<sp/>axis=0).round()</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FUNCTIONS.Move_screen(</highlight><highlight class="stringliteral">&quot;now&quot;</highlight><highlight class="normal">,<sp/>beacon_center)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FUNCTIONS.select_army(</highlight><highlight class="stringliteral">&quot;select&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classpysc2_1_1agents_1_1scripted__agent_1_1_collect_mineral_shards" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1agents_1_1scripted__agent_1_1_collect_mineral_shards" kindref="compound">CollectMineralShards</ref>(<ref refid="classpysc2_1_1agents_1_1base__agent_1_1_base_agent" kindref="compound">base_agent.BaseAgent</ref>):</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;An<sp/>agent<sp/>specifically<sp/>for<sp/>solving<sp/>the<sp/>CollectMineralShards<sp/>map.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1agents_1_1scripted__agent_1_1_collect_mineral_shards_1a74fd157c889f76bb587eb46c3ff83f7e" kindref="member">step</ref>(self,<sp/>obs):</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>super(CollectMineralShards,<sp/>self).<ref refid="classpysc2_1_1agents_1_1scripted__agent_1_1_collect_mineral_shards_1a74fd157c889f76bb587eb46c3ff83f7e" kindref="member">step</ref>(obs)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>FUNCTIONS.Move_screen.id<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>obs.observation.available_actions:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>player_relative<sp/>=<sp/>obs.observation.feature_screen.player_relative</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>minerals<sp/>=<sp/>_xy_locs(player_relative<sp/>==<sp/>_PLAYER_NEUTRAL)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>minerals:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FUNCTIONS.no_op()</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marines<sp/>=<sp/>_xy_locs(player_relative<sp/>==<sp/>_PLAYER_SELF)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>marine_xy<sp/>=<sp/>numpy.mean(marines,<sp/>axis=0).round()<sp/><sp/></highlight><highlight class="comment">#<sp/>Average<sp/>location.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>distances<sp/>=<sp/>numpy.linalg.norm(numpy.array(minerals)<sp/>-<sp/>marine_xy,<sp/>axis=1)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>closest_mineral_xy<sp/>=<sp/>minerals[numpy.argmin(distances)]</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FUNCTIONS.Move_screen(</highlight><highlight class="stringliteral">&quot;now&quot;</highlight><highlight class="normal">,<sp/>closest_mineral_xy)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FUNCTIONS.select_army(</highlight><highlight class="stringliteral">&quot;select&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="classpysc2_1_1agents_1_1scripted__agent_1_1_collect_mineral_shards_feature_units" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1agents_1_1scripted__agent_1_1_collect_mineral_shards_feature_units" kindref="compound">CollectMineralShardsFeatureUnits</ref>(<ref refid="classpysc2_1_1agents_1_1base__agent_1_1_base_agent" kindref="compound">base_agent.BaseAgent</ref>):</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;An<sp/>agent<sp/>for<sp/>solving<sp/>the<sp/>CollectMineralShards<sp/>map<sp/>with<sp/>feature<sp/>units.</highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="77"><highlight class="stringliteral"><sp/><sp/>Controls<sp/>the<sp/>two<sp/>marines<sp/>independently:</highlight></codeline>
<codeline lineno="78"><highlight class="stringliteral"><sp/><sp/>-<sp/>select<sp/>marine</highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral"><sp/><sp/>-<sp/>move<sp/>to<sp/>nearest<sp/>mineral<sp/>shard<sp/>that<sp/>wasn&apos;t<sp/>the<sp/>previous<sp/>target</highlight></codeline>
<codeline lineno="80"><highlight class="stringliteral"><sp/><sp/>-<sp/>swap<sp/>marine<sp/>and<sp/>repeat</highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral"><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1agents_1_1scripted__agent_1_1_collect_mineral_shards_feature_units_1a6f486dbd7973e7d925e70e72ffe44aff" kindref="member">setup</ref>(self,<sp/>obs_spec,<sp/>action_spec):</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>super(CollectMineralShardsFeatureUnits,<sp/>self).<ref refid="classpysc2_1_1agents_1_1scripted__agent_1_1_collect_mineral_shards_feature_units_1a6f486dbd7973e7d925e70e72ffe44aff" kindref="member">setup</ref>(obs_spec,<sp/>action_spec)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;feature_units&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>obs_spec:</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&quot;This<sp/>agent<sp/>requires<sp/>the<sp/>feature_units<sp/>observation.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1agents_1_1scripted__agent_1_1_collect_mineral_shards_feature_units_1a46a2b6dc43b5fd8e535505d25a29ea1d" kindref="member">reset</ref>(self):</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>super(CollectMineralShardsFeatureUnits,<sp/>self).<ref refid="classpysc2_1_1agents_1_1scripted__agent_1_1_collect_mineral_shards_feature_units_1a46a2b6dc43b5fd8e535505d25a29ea1d" kindref="member">reset</ref>()</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1agents_1_1scripted__agent_1_1_collect_mineral_shards_feature_units_1ae2389ea90b1e980f759032dd134b2c4d" kindref="member">_marine_selected</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1agents_1_1scripted__agent_1_1_collect_mineral_shards_feature_units_1ae628a69c9b58818848047447a197f8b0" kindref="member">_previous_mineral_xy</ref><sp/>=<sp/>[-1,<sp/>-1]</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1agents_1_1scripted__agent_1_1_collect_mineral_shards_feature_units_1ac09e7d23c9cc9ad8b7a26c42561bd4b0" kindref="member">step</ref>(self,<sp/>obs):</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>super(CollectMineralShardsFeatureUnits,<sp/>self).<ref refid="classpysc2_1_1agents_1_1scripted__agent_1_1_collect_mineral_shards_feature_units_1ac09e7d23c9cc9ad8b7a26c42561bd4b0" kindref="member">step</ref>(obs)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>marines<sp/>=<sp/>[unit<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>unit<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>obs.observation.feature_units</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>unit.alliance<sp/>==<sp/>_PLAYER_SELF]</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>marines:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FUNCTIONS.no_op()</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>marine_unit<sp/>=<sp/>next((m<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>m<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>marines</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>m.is_selected<sp/>==<sp/>self.<ref refid="classpysc2_1_1agents_1_1scripted__agent_1_1_collect_mineral_shards_feature_units_1ae2389ea90b1e980f759032dd134b2c4d" kindref="member">_marine_selected</ref>),<sp/>marines[0])</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>marine_xy<sp/>=<sp/>[marine_unit.x,<sp/>marine_unit.y]</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>marine_unit.is_selected:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Nothing<sp/>selected<sp/>or<sp/>the<sp/>wrong<sp/>marine<sp/>is<sp/>selected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1agents_1_1scripted__agent_1_1_collect_mineral_shards_feature_units_1ae2389ea90b1e980f759032dd134b2c4d" kindref="member">_marine_selected</ref><sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FUNCTIONS.select_point(</highlight><highlight class="stringliteral">&quot;select&quot;</highlight><highlight class="normal">,<sp/>marine_xy)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>FUNCTIONS.Move_screen.id<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>obs.observation.available_actions:</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Find<sp/>and<sp/>move<sp/>to<sp/>the<sp/>nearest<sp/>mineral.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>minerals<sp/>=<sp/>[[unit.x,<sp/>unit.y]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>unit<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>obs.observation.feature_units</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>unit.alliance<sp/>==<sp/>_PLAYER_NEUTRAL]</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classpysc2_1_1agents_1_1scripted__agent_1_1_collect_mineral_shards_feature_units_1ae628a69c9b58818848047447a197f8b0" kindref="member">_previous_mineral_xy</ref><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>minerals:</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Don&apos;t<sp/>go<sp/>for<sp/>the<sp/>same<sp/>mineral<sp/>shard<sp/>as<sp/>other<sp/>marine.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minerals.remove(self.<ref refid="classpysc2_1_1agents_1_1scripted__agent_1_1_collect_mineral_shards_feature_units_1ae628a69c9b58818848047447a197f8b0" kindref="member">_previous_mineral_xy</ref>)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>minerals:</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Find<sp/>the<sp/>closest.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distances<sp/>=<sp/>numpy.linalg.norm(</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numpy.array(minerals)<sp/>-<sp/>numpy.array(marine_xy),<sp/>axis=1)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closest_mineral_xy<sp/>=<sp/>minerals[numpy.argmin(distances)]</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Swap<sp/>to<sp/>the<sp/>other<sp/>marine.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1agents_1_1scripted__agent_1_1_collect_mineral_shards_feature_units_1ae2389ea90b1e980f759032dd134b2c4d" kindref="member">_marine_selected</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1agents_1_1scripted__agent_1_1_collect_mineral_shards_feature_units_1ae628a69c9b58818848047447a197f8b0" kindref="member">_previous_mineral_xy</ref><sp/>=<sp/>closest_mineral_xy</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FUNCTIONS.Move_screen(</highlight><highlight class="stringliteral">&quot;now&quot;</highlight><highlight class="normal">,<sp/>closest_mineral_xy)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FUNCTIONS.no_op()</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="classpysc2_1_1agents_1_1scripted__agent_1_1_defeat_roaches" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1agents_1_1scripted__agent_1_1_defeat_roaches" kindref="compound">DefeatRoaches</ref>(<ref refid="classpysc2_1_1agents_1_1base__agent_1_1_base_agent" kindref="compound">base_agent.BaseAgent</ref>):</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;An<sp/>agent<sp/>specifically<sp/>for<sp/>solving<sp/>the<sp/>DefeatRoaches<sp/>map.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1agents_1_1scripted__agent_1_1_defeat_roaches_1a681a94d365c4725ba8fa30bbc682e4ac" kindref="member">step</ref>(self,<sp/>obs):</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>super(DefeatRoaches,<sp/>self).<ref refid="classpysc2_1_1agents_1_1scripted__agent_1_1_defeat_roaches_1a681a94d365c4725ba8fa30bbc682e4ac" kindref="member">step</ref>(obs)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>FUNCTIONS.Attack_screen.id<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>obs.observation.available_actions:</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>player_relative<sp/>=<sp/>obs.observation.feature_screen.player_relative</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>roaches<sp/>=<sp/>_xy_locs(player_relative<sp/>==<sp/>_PLAYER_ENEMY)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>roaches:</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FUNCTIONS.no_op()</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Find<sp/>the<sp/>roach<sp/>with<sp/>max<sp/>y<sp/>coord.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>target<sp/>=<sp/>roaches[numpy.argmax(numpy.array(roaches)[:,<sp/>1])]</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FUNCTIONS.Attack_screen(</highlight><highlight class="stringliteral">&quot;now&quot;</highlight><highlight class="normal">,<sp/>target)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>FUNCTIONS.select_army.id<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>obs.observation.available_actions:</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FUNCTIONS.select_army(</highlight><highlight class="stringliteral">&quot;select&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FUNCTIONS.no_op()</highlight></codeline>
    </programlisting>
    <location file="agents/scripted_agent.py"/>
  </compounddef>
</doxygen>
