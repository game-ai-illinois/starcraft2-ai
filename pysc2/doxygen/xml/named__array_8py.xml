<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="named__array_8py" kind="file" language="Python">
    <compoundname>named_array.py</compoundname>
    <innerclass refid="classpysc2_1_1lib_1_1named__array_1_1_named_dict" prot="public">pysc2::lib::named_array::NamedDict</innerclass>
    <innerclass refid="classpysc2_1_1lib_1_1named__array_1_1_named_numpy_array" prot="public">pysc2::lib::named_array::NamedNumpyArray</innerclass>
    <innernamespace refid="namespacepysc2_1_1lib_1_1named__array">pysc2::lib::named_array</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacepysc2_1_1lib_1_1named__array" refkind="compound"><highlight class="comment">#<sp/>Copyright<sp/>2018<sp/>Google<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS-IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;Named<sp/>numpy<sp/>arrays<sp/>for<sp/>easier<sp/>access<sp/>to<sp/>the<sp/>observation<sp/>data.</highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral">https://docs.scipy.org/doc/numpy/user/basics.rec.html<sp/>are<sp/>not<sp/>enough<sp/>since<sp/>they</highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral">actually<sp/>change<sp/>the<sp/>type<sp/>and<sp/>don&apos;t<sp/>interoperate<sp/>well<sp/>with<sp/>tensorflow.</highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>absolute_import</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>division</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>print_function</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numbers</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>re</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>enum</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classpysc2_1_1lib_1_1named__array_1_1_named_dict" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1named__array_1_1_named_dict" kindref="compound">NamedDict</ref>(dict):</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;A<sp/>dict<sp/>where<sp/>you<sp/>can<sp/>use<sp/>`d[&quot;element&quot;]`<sp/>or<sp/>`d.element`.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1named__array_1_1_named_dict_1adb11fc53cf4d37dee68b3d68aee852e5" kindref="member">__init__</ref>(self,<sp/>*args,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>super(NamedDict,<sp/>self).<ref refid="classpysc2_1_1lib_1_1named__array_1_1_named_dict_1adb11fc53cf4d37dee68b3d68aee852e5" kindref="member">__init__</ref>(*args,<sp/>**kwargs)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1named__array_1_1_named_dict_1a40ac99411a11abc62add2d3030f6bfa2" kindref="member">__dict__</ref><sp/>=<sp/>self</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">#<sp/>pylint:<sp/>disable=protected-access</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classpysc2_1_1lib_1_1named__array_1_1_named_numpy_array" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1named__array_1_1_named_numpy_array" kindref="compound">NamedNumpyArray</ref>(np.ndarray):</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;A<sp/>subclass<sp/>of<sp/>ndarray<sp/>that<sp/>lets<sp/>you<sp/>give<sp/>names<sp/>to<sp/>indices.</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"><sp/><sp/>This<sp/>is<sp/>a<sp/>normal<sp/>ndarray<sp/>in<sp/>the<sp/>sense<sp/>that<sp/>you<sp/>can<sp/>always<sp/>index<sp/>by<sp/>numbers<sp/>and</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/>slices,<sp/>though<sp/>elipses<sp/>don&apos;t<sp/>work.<sp/>Also,<sp/>all<sp/>elements<sp/>have<sp/>the<sp/>same<sp/>type,</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"><sp/><sp/>unlike<sp/>a<sp/>record<sp/>array.</highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"><sp/><sp/>Names<sp/>should<sp/>be<sp/>a<sp/>list<sp/>of<sp/>names<sp/>per<sp/>dimension<sp/>in<sp/>the<sp/>ndarray<sp/>shape.<sp/>The<sp/>names</highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral"><sp/><sp/>should<sp/>be<sp/>a<sp/>list<sp/>or<sp/>tuple<sp/>of<sp/>strings,<sp/>a<sp/>namedtuple<sp/>class<sp/>(with<sp/>names<sp/>taken</highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"><sp/><sp/>from<sp/>_fields),<sp/>or<sp/>an<sp/>IntEnum.<sp/>Alternatively<sp/>if<sp/>you<sp/>don&apos;t<sp/>want<sp/>to<sp/>give<sp/>a<sp/>name</highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral"><sp/><sp/>to<sp/>a<sp/>particular<sp/>dimension,<sp/>use<sp/>None.<sp/>If<sp/>your<sp/>array<sp/>only<sp/>has<sp/>one<sp/>dimension,<sp/>the</highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral"><sp/><sp/>second<sp/>level<sp/>of<sp/>list<sp/>can<sp/>be<sp/>skipped.</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"><sp/><sp/>Example<sp/>usage:</highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>named_array.NamedNumpyArray([1,<sp/>3,<sp/>6],<sp/>[&quot;a&quot;,<sp/>&quot;b&quot;,<sp/>&quot;c&quot;])</highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>a.a,<sp/>a[1],<sp/>a[&quot;c&quot;]<sp/>=&gt;<sp/>1,<sp/>3,<sp/>6</highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>b<sp/>=<sp/>named_array.NamedNumpyArray([[1,<sp/>3],<sp/>[6,<sp/>8]],<sp/>[[&quot;a&quot;,<sp/>&quot;b&quot;],<sp/>None])</highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>b.a,<sp/>b[1],<sp/>b[&quot;a&quot;,<sp/>1]<sp/>=&gt;<sp/>[1,<sp/>3],<sp/>[6,<sp/>8],<sp/>3</highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>named_array.NamedNumpyArray([[1,<sp/>3],<sp/>[6,<sp/>8]],<sp/>[None,<sp/>[&quot;a&quot;,<sp/>&quot;b&quot;]])</highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>c[0].a,<sp/>b[1,<sp/>0],<sp/>b[1,<sp/>&quot;b&quot;]<sp/>=&gt;<sp/>1,<sp/>6,<sp/>8</highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral"><sp/><sp/>Look<sp/>at<sp/>the<sp/>tests<sp/>for<sp/>more<sp/>examples<sp/>including<sp/>using<sp/>enums<sp/>and<sp/>named<sp/>tuples.</highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral"><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>Details<sp/>of<sp/>how<sp/>to<sp/>subclass<sp/>an<sp/>ndarray<sp/>are<sp/>at:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>https://docs.scipy.org/doc/numpy-1.13.0/user/basics.subclassing.html</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1named__array_1_1_named_numpy_array_1a430c1d678e959482fa73622ba8dc276a" kindref="member">__new__</ref>(cls,<sp/>values,<sp/>names,<sp/>*args,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>obj<sp/>=<sp/>np.array(values,<sp/>*args,<sp/>**kwargs)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(obj.shape)<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>obj.shape[0]<sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>names<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>names[0]<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Support<sp/>arrays<sp/>of<sp/>length<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>names<sp/>=<sp/>[</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Allow<sp/>just<sp/>a<sp/>single<sp/>dimension<sp/>if<sp/>the<sp/>array<sp/>is<sp/>also<sp/>single<sp/>dimension.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(names)<sp/>&gt;<sp/>1:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>names<sp/>=<sp/>[names]</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>TypeError:<sp/><sp/></highlight><highlight class="comment">#<sp/>len<sp/>of<sp/>a<sp/>namedtuple<sp/>is<sp/>a<sp/>TypeError</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>names<sp/>=<sp/>[names]</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Validate<sp/>names!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(names,<sp/>(list,<sp/>tuple))<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>len(names)<sp/>!=<sp/>len(obj.shape):</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Names<sp/>must<sp/>be<sp/>a<sp/>list<sp/>of<sp/>length<sp/>equal<sp/>to<sp/>the<sp/>array<sp/>shape:<sp/>%s<sp/>!=<sp/>%s.&quot;</highlight><highlight class="normal"><sp/>%</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(len(names),<sp/>len(obj.shape)))</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>index_names<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>only_none<sp/>=<sp/>obj.shape[0]<sp/>&gt;<sp/>0</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i,<sp/>o<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(names):</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>o<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_names.append(o)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>only_none<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(o,<sp/>enum.EnumMeta):</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j,<sp/>n<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(o._member_names_):</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>j<sp/>!=<sp/>o[n]:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Enum<sp/>has<sp/>holes<sp/>or<sp/>doesn&apos;t<sp/>start<sp/>from<sp/>0.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o<sp/>=<sp/>o._member_names_</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>isinstance(o,<sp/>type):<sp/><sp/></highlight><highlight class="comment">#<sp/>Assume<sp/>namedtuple</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o<sp/>=<sp/>o._fields</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>AttributeError:</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Bad<sp/>names.<sp/>Must<sp/>be<sp/>None,<sp/>a<sp/>list<sp/>of<sp/>strings,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;a<sp/>namedtuple,<sp/>or<sp/>IntEnum.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>isinstance(o,<sp/>(list,<sp/>tuple)):</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>n<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>o:</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(n,<sp/>str):</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>name,<sp/>must<sp/>be<sp/>a<sp/>list<sp/>of<sp/>strings,<sp/>not<sp/>%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>type(n))</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Bad<sp/>names.<sp/>Must<sp/>be<sp/>None,<sp/>a<sp/>list<sp/>of<sp/>strings,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;a<sp/>namedtuple,<sp/>or<sp/>IntEnum.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>obj.shape[i]<sp/>!=<sp/>len(o):</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Names<sp/>in<sp/>dimension<sp/>%s<sp/>is<sp/>the<sp/>wrong<sp/>length&quot;</highlight><highlight class="normal"><sp/>%<sp/>i)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_names.append({n:<sp/>j<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j,<sp/>n<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(o)})</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>only_none:</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;No<sp/>names<sp/>given.<sp/>Use<sp/>a<sp/>normal<sp/>numpy.ndarray<sp/>instead.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Finally<sp/>convert<sp/>to<sp/>a<sp/>NamedNumpyArray.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>obj<sp/>=<sp/>obj.view(cls)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>obj._index_names<sp/>=<sp/>index_names<sp/><sp/></highlight><highlight class="comment">#<sp/>[{name:<sp/>index},<sp/>...],<sp/>dict<sp/>per<sp/>dimension.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1named__array_1_1_named_numpy_array_1a2bd5549c57fae992baaa4c99a0e3bcfb" kindref="member">__array_finalize__</ref>(self,<sp/>obj):</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>obj<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1named__array_1_1_named_numpy_array_1abe0a817c0553481b98320b31ca686331" kindref="member">_index_names</ref><sp/>=<sp/>getattr(obj,<sp/></highlight><highlight class="stringliteral">&quot;_index_names&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1named__array_1_1_named_numpy_array_1a965ef9165993aa61f2a828c2d74d8e2b" kindref="member">__getattr__</ref>(self,<sp/>name):</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self[name]</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>KeyError:</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>AttributeError(</highlight><highlight class="stringliteral">&quot;Bad<sp/>attribute<sp/>name:<sp/>%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>name)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1named__array_1_1_named_numpy_array_1ae20f52f3047bba90d9deb658d8145306" kindref="member">__setattr__</ref>(self,<sp/>name,<sp/>value):</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>name<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;_index_names&quot;</highlight><highlight class="normal">:<sp/><sp/></highlight><highlight class="comment">#<sp/>Need<sp/>special<sp/>handling<sp/>to<sp/>avoid<sp/>recursion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>super(NamedNumpyArray,<sp/>self).<ref refid="classpysc2_1_1lib_1_1named__array_1_1_named_numpy_array_1ae20f52f3047bba90d9deb658d8145306" kindref="member">__setattr__</ref>(name,<sp/>value)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpysc2_1_1lib_1_1named__array_1_1_named_numpy_array_1a5731267b4680b51ed45c4ecd3255dbf0" kindref="member">__setitem__</ref>(name,<sp/>value)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1named__array_1_1_named_numpy_array_1a2b0e1e4edb82572b308b1144cc1e2835" kindref="member">__getitem__</ref>(self,<sp/>indices):</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Get<sp/>by<sp/>indexing<sp/>lookup.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(indices,<sp/>tuple):</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>indices<sp/>=<sp/>(indices,)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>obj<sp/>=<sp/>self</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>index<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>indices:</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>_get_index(obj,<sp/>index)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>obj<sp/>=<sp/>super(NamedNumpyArray,<sp/>obj).<ref refid="classpysc2_1_1lib_1_1named__array_1_1_named_numpy_array_1a2b0e1e4edb82572b308b1144cc1e2835" kindref="member">__getitem__</ref>(index)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(obj,<sp/>np.ndarray):<sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>this<sp/>is<sp/>a<sp/>view,<sp/>index<sp/>the<sp/>names<sp/>too.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(index,<sp/>numbers.Integral):</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj._index_names<sp/>=<sp/>obj._index_names[1:]</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>isinstance(index,<sp/>slice)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>self.<ref refid="classpysc2_1_1lib_1_1named__array_1_1_named_numpy_array_1abe0a817c0553481b98320b31ca686331" kindref="member">_index_names</ref>[0]:</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Rebuild<sp/>the<sp/>index<sp/>of<sp/>names.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>names<sp/>=<sp/>sorted(obj._index_names[0].items(),<sp/>key=</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>item:<sp/>item[1])</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sliced<sp/>=<sp/>{n:<sp/>i<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i,<sp/>(n,<sp/>_)<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(names[index])}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj._index_names<sp/>=<sp/>[sliced]<sp/>+<sp/>obj._index_names[1:]</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1named__array_1_1_named_numpy_array_1a5731267b4680b51ed45c4ecd3255dbf0" kindref="member">__setitem__</ref>(self,<sp/>indices,<sp/>value):</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(indices,<sp/>tuple):</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>indices<sp/>=<sp/>(indices,)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>obj<sp/>=<sp/>self</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(indices)<sp/>&gt;<sp/>1:</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>obj<sp/>=<sp/>obj.__getitem(indices[:-1])</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/>=<sp/>_get_index(obj,<sp/>indices[-1])</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>super(NamedNumpyArray,<sp/>obj).<ref refid="classpysc2_1_1lib_1_1named__array_1_1_named_numpy_array_1a5731267b4680b51ed45c4ecd3255dbf0" kindref="member">__setitem__</ref>(index,<sp/>value)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1named__array_1_1_named_numpy_array_1a3b773f155fcf8ff1a25074f7e44b1f90" kindref="member">__getslice__</ref>(self,<sp/>i,<sp/>j):<sp/><sp/></highlight><highlight class="comment">#<sp/>deprecated,<sp/>but<sp/>still<sp/>needed...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>https://docs.python.org/2.0/ref/sequence-methods.html</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self[max(0,<sp/>i):max(0,<sp/>j):]</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1named__array_1_1_named_numpy_array_1a8642b7f0cc04d088f9e46ddf375cee65" kindref="member">__setslice__</ref>(self,<sp/>i,<sp/>j,<sp/>seq):<sp/><sp/></highlight><highlight class="comment">#<sp/>deprecated,<sp/>but<sp/>still<sp/>needed...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>self[max(0,<sp/>i):max(0,<sp/>j):]<sp/>=<sp/>seq</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpysc2_1_1lib_1_1named__array_1_1_named_numpy_array_1a60a056d2104ac21e599185e1f5da7367" kindref="member">__repr__</ref>(self):</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;A<sp/>repr,<sp/>parsing<sp/>the<sp/>original<sp/>and<sp/>adding<sp/>the<sp/>names<sp/>param.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>names<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>dim_names<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classpysc2_1_1lib_1_1named__array_1_1_named_numpy_array_1abe0a817c0553481b98320b31ca686331" kindref="member">_index_names</ref>:</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>dim_names:</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim_names<sp/>=<sp/>[n<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>n,<sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sorted(dim_names.items(),</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key=</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>item:<sp/>item[1])]</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(dim_names)<sp/>&gt;<sp/>11:</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dim_names<sp/>=<sp/>dim_names[:5]<sp/>+<sp/>[</highlight><highlight class="stringliteral">&quot;...&quot;</highlight><highlight class="normal">]<sp/>+<sp/>dim_names[-5:]</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>names.append(dim_names)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(names)<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>names<sp/>=<sp/>names[0]</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>&quot;NamedNumpyArray([1,<sp/>3,<sp/>6],<sp/>dtype=int32)&quot;<sp/>-&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>[&quot;NamedNumpyArray&quot;,<sp/>&quot;[1,<sp/>3,<sp/>6]&quot;,<sp/>&quot;,<sp/>dtype=int32&quot;]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>matches<sp/>=<sp/>re.findall(</highlight><highlight class="stringliteral">r&quot;^(\w+)\(([\d\.,<sp/>\n\[\]]*)(,<sp/>\w+=.+)?\)$&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np.array_repr(self))[0]</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;%s(%s,<sp/>%s%s)&quot;</highlight><highlight class="normal"><sp/>%<sp/>(</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matches[0],<sp/>matches[1],<sp/>names,<sp/>matches[2])</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_get_index(obj,<sp/>index):</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Turn<sp/>a<sp/>generalized<sp/>index<sp/>(int/slice/str)<sp/>into<sp/>a<sp/>real<sp/>index<sp/>(int/slice).&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(index,<sp/>(numbers.Integral,<sp/>slice)):</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>isinstance(index,<sp/>str):</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj._index_names[0][index]</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>KeyError:</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>KeyError(</highlight><highlight class="stringliteral">&quot;Name<sp/>&apos;%s&apos;<sp/>is<sp/>invalid.&quot;</highlight><highlight class="normal"><sp/>%<sp/>index)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>TypeError:</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>access<sp/>an<sp/>unnamed<sp/>axis<sp/>by<sp/>name:<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal"><sp/>%<sp/>index)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>index<sp/>by<sp/>type:<sp/>%s;<sp/>only<sp/>int,<sp/>string<sp/>or<sp/>slice&quot;</highlight><highlight class="normal"><sp/>%<sp/>type(index))</highlight></codeline>
    </programlisting>
    <location file="lib/named_array.py"/>
  </compounddef>
</doxygen>
